I"Ÿ-<blockquote>
  <p>Vous avez probablement entendu auparavant le terme <strong>objet</strong> dans un contexte de programmation.</p>
</blockquote>

<p>Commen√ßons par nous int√©resser √† quelques objets du monde r√©el, comme les stylos, les livres, les smartphones, les ordinateurs, etc.</p>

<p><img src="/images/objects.jpg" alt="sublime" /></p>

<p>Vous reconnaissez tous les stylos ‚Äî √† piston, √† bille, feutre, gel, etc. ‚Äî comme faisant partie du type d‚Äôobjet : stylos. Vous pouvez √©crire avec, ils utilisent de l‚Äôencre et peuvent se tenir √† une main.</p>

<p>C‚Äôest la m√™me chose pour les livres : ils ont une couverture, un certain nombre de pages, un titre, et un ou plusieurs auteurs.</p>

<p>Vous remarquez des points communs entre diff√©rents objets et vous notez ces informations pour cr√©er une repr√©sentation mentale d‚Äôune cat√©gorie d‚Äôobjets.</p>

<p>Cette liste mentale d‚Äôattributs sert de <strong>mod√®le</strong> pour cet objet. En programmation, on l‚Äôappelle <strong>une classe.</strong> Pour cr√©er une classe, vous pouvez choisir le nom de votre choix. C‚Äôest pour cela qu‚Äôon l‚Äôappelle un <strong>type nomm√©.</strong> Vous le verrez, les classes permettent aussi de regrouper beaucoup de d√©tails ; c‚Äôest pourquoi elles s‚Äôappellent aussi des <strong>types complexes.</strong></p>

<p>Avant de plonger dans les classes, observons un type JavaScript complexe : <strong>l‚Äôobjet.</strong></p>

<h4 id="d√©couvrez-les-objets">D√©couvrez les objets</h4>

<p>Les objets JavaScript sont √©crits en <strong>JSON (JavaScript Object Notation).</strong> Ce sont des s√©ries de paires <strong>cl√©s/valeurs</strong> s√©par√©es par <strong>des virgules,</strong> entre <strong>des accolades.</strong></p>

<p>Les objets peuvent √™tre enregistr√©s dans une variable :</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">myBook</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">title</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Le facteur temps ne sonne jamais deux fois</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">author</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Etienne Klein</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">numberOfPages</span><span class="p">:</span> <span class="mi">250</span><span class="p">,</span>
    <span class="na">isAvailable</span><span class="p">:</span> <span class="kc">true</span>
<span class="p">};</span>
</code></pre></div></div>

<p>Chaque cl√© est une cha√Æne (title, author, numberOfPages‚Ä¶), et les valeurs associ√©es peuvent avoir tout type de donn√©es (nombre, cha√Æne, etc).</p>

<blockquote>
  <p>Construire des objets pr√©sente un avantage essentiel : cela permet de regrouper les attributs d‚Äôune chose unique √† un m√™me emplacement, que ce soit un livre, un profil d‚Äôutilisateur ou la configuration d‚Äôune application, par exemple.</p>
</blockquote>

<h4 id="acc√©dez-aux-donn√©es-dun-objet">Acc√©dez aux donn√©es d‚Äôun objet</h4>

<p>Maintenant que vous savez comment cr√©er un objet en JavaScript, voyons comment acc√©der aux donn√©es dans un objet avec <strong>la notation point√©e (dot notation),</strong> expliqu√©e ci-dessous.</p>

<p>Une fois qu‚Äôun objet est enregistr√© dans une variable, vous pouvez acc√©der √† ses donn√©es comme dans l‚Äôexemple ci-dessous.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">myBook</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">title</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Le facteur temps ne sonne jamais deux fois</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">author</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Etienne Klein</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">numberOfPages</span><span class="p">:</span> <span class="mi">250</span><span class="p">,</span>
    <span class="na">isAvailable</span><span class="p">:</span> <span class="kc">true</span>
<span class="p">};</span>

<span class="kd">let</span> <span class="nx">bookTitle</span> <span class="o">=</span> <span class="nx">myBook</span><span class="p">.</span><span class="nx">title</span><span class="p">;</span>  <span class="c1">// "Le facteur temps ne sonne jamais deux fois"</span>
<span class="kd">let</span> <span class="nx">bookPages</span> <span class="o">=</span> <span class="nx">myBook</span><span class="p">.</span><span class="nx">numberOfPages</span>  <span class="c1">// 250</span>
</code></pre></div></div>
<p>Pour cela, utilisez le nom de la variable qui contient l‚Äôobjet, un point <code class="highlighter-rouge">(  .  )</code>, puis le nom de la cl√© dont vous souhaitez r√©cup√©rer la valeur.</p>

<h4 id="manipulez-des-classes">Manipulez des classes</h4>

<p>La construction d‚Äôun objet √† la main, par la notation √† accolades vue pr√©c√©demment, convient bien √† des objets simples et uniques. Mais vous aurez souvent besoin de beaucoup d‚Äôobjets du m√™me type. C‚Äôest l√† que les classes sont utiles.</p>

<p>Comme expliqu√© pr√©c√©demment, une classe est un mod√®le pour un objet dans le code. Elle permet de construire plusieurs objets du m√™me type (appel√©s instances de la m√™me classe) plus facilement, rapidement et en toute fiabilit√©.</p>

<p>Voyons comment construire une classe dans le code.</p>

<p>Pour cr√©er une classe dans JavaScript, utilisez le mot cl√©  <code class="highlighter-rouge">class</code>, suivi par un nom. Encadrez ensuite le code de la classe entre accolades :</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nx">Book</span> <span class="p">{</span>

<span class="p">}</span>
</code></pre></div></div>

<p>Pour cette classe, nous souhaitons que chaque  <code class="highlighter-rouge">Book</code>  ait un titre, un auteur et un nombre de pages. Pour cela, vous utilisez ce qu‚Äôon appelle <strong>un constructor</strong>.</p>

<blockquote>
  <p>NB: Le  <code class="highlighter-rouge">constructor</code> d‚Äôune classe est la fonction qui est appel√©e quand on cr√©e une nouvelle instance de cette classe avec le mot cl√© <code class="highlighter-rouge">new</code>.</p>
</blockquote>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nx">Book</span> <span class="p">{</span>
    <span class="kd">constructor</span> <span class="p">(</span><span class="nx">title</span><span class="p">,</span> <span class="nx">author</span><span class="p">,</span> <span class="nx">pages</span><span class="p">)</span> <span class="p">{</span>

    <span class="p">}</span>
  <span class="p">}</span>
</code></pre></div></div>

<p>Il y a un ensemble d‚Äôinstructions √† suivre √† l‚Äôint√©rieur du  constructor  pour cr√©er une instance de la classe  <code class="highlighter-rouge">Book</code>. Pour attribuer le titre, l‚Äôauteur et le nombre de pages re√ßus √† cette instance, utilisez le mot cl√©  <code class="highlighter-rouge">this</code>  et la notation <code class="highlighter-rouge">dot</code>.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nx">Book</span> <span class="p">{</span>
    <span class="kd">constructor</span> <span class="p">(</span><span class="nx">title</span><span class="p">,</span> <span class="nx">author</span><span class="p">,</span> <span class="nx">pages</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">title</span> <span class="o">=</span> <span class="nx">title</span><span class="p">;</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">author</span> <span class="o">=</span> <span class="nx">author</span><span class="p">;</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">pages</span> <span class="o">=</span> <span class="nx">pages</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>

</code></pre></div></div>
<p>Ici, le mot cl√©  <code class="highlighter-rouge">this</code>  fait r√©f√©rence √† la nouvelle instance. Donc, il utilise la notation dot pour attribuer les valeurs re√ßues aux cl√©s correspondantes.</p>

<p>Maintenant que la classe est termin√©e, vous pouvez cr√©er des instances par le mot cl√©  <code class="highlighter-rouge">new</code>  :</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nx">Book</span> <span class="p">{</span>
    <span class="kd">constructor</span> <span class="p">(</span><span class="nx">title</span><span class="p">,</span> <span class="nx">author</span><span class="p">,</span> <span class="nx">pages</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">title</span> <span class="o">=</span> <span class="nx">title</span><span class="p">;</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">author</span> <span class="o">=</span> <span class="nx">author</span><span class="p">;</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">pages</span> <span class="o">=</span> <span class="nx">pages</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="kd">let</span> <span class="nx">newBook</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Book</span><span class="p">(</span><span class="dl">'</span><span class="s1">Le facteur temps ne sonne jamais deux fois, </span><span class="dl">'</span><span class="nx">Etienne</span> <span class="nx">Klein</span><span class="dl">'</span><span class="s1">, 250 );
</span></code></pre></div></div>
<p>Cette ligne cr√©e l‚Äôobjet suivant :</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
    <span class="nl">title</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Le facteur temps ne sonne jamais deux fois</span><span class="dl">'</span><span class="p">,</span>
    <span class="nx">author</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Etienne Klein</span><span class="dl">'</span><span class="p">,</span>
    <span class="nx">numberOfPages</span><span class="p">:</span> <span class="mi">250</span><span class="p">,</span>

<span class="p">}</span>
</code></pre></div></div>
<p>Avec une classe  Book, vous pouvez cr√©er facilement et rapidement de nouveaux objets ` Book`.</p>

<p>Voil√† ! Maintenant, √† vous de jouer. La meilleure fa√ßon d‚Äôapprendre les classes est d‚Äôen cr√©er une vous-m√™me.</p>

<h4 id="pour-r√©sumer">Pour r√©sumer</h4>

<ul>
  <li>
    <p>les objets avec les paires cl√©s/valeurs en notation JSON. Ils permettent d‚Äôenregistrer plusieurs √©l√©ments de donn√©es associ√©s dans une m√™me variable ;</p>
  </li>
  <li>
    <p>la notation point√©e (dot) qui donne acc√®s aux valeurs d‚Äôun objet et la possibilit√© de les modifier ;</p>
  </li>
  <li>
    <p>les classes, et comment l‚Äôutilisation de classes peut vous permettre de cr√©er des objets plus facilement et de fa√ßon plus lisible.</p>
  </li>
</ul>
:ET