I"w<p>⚠️ If you are not on macOS or a Linux distribution, don’t try to type those commands in the regular Windows Command Prompt, they won’t work. You need to do one of the following:</p>

<ul>
  <li>
    <p>Install <a href="">Linux Bash Shell</a> on your Windows 10</p>
  </li>
  <li>
    <p>You don’t have Windows 10? Head to <a href="">Cloud9</a> and create a free account. You’ll have your personal “linux in the cloud” with a real terminal.
In this workshop, you’ll learn how to:</p>
  </li>
  <li>Start tracking versions of a project using git</li>
  <li>Commit (save) your work</li>
  <li>Use branches to collaborate on a project</li>
  <li>Use GitHub to back up your work in the cloud</li>
  <li>Discover GitHub’s features for collaborating</li>
  <li>Deploy a simple static website using GitHub Pages</li>
  <li>Solve conflicts in your code between two versions
Y
ou can go through the slides <a href="">here</a></li>
</ul>

<h4 id="main-takeaways">Main takeaways</h4>

<p><strong>Git</strong> allows us to <strong>track</strong> versions of a project (= a set of files in a folder on your computer):</p>

<pre><code class="language-git">git init
</code></pre>
<p>From now on, each time you change something in a file anywhere in this folder, git will track these changes 🕵️. Do not run this command in your $HOME folder (the ~ folder, or /Users/<your_name> on Mac). Always create a new folder (with mkdir) and go into it (with cd). That’s where you’ll want to run the git init command.</your_name></p>

<p>To save your last changes with git 💾, follow this 3-step process:</p>

<p>Check the files that were modified since your last commit:</p>

<p>git status
Add the modified files you want to save:</p>

<p>git add logo.png index.html style.css
(tip: you can also use git . to add all the files)</p>

<p>Commit the changes with a message that clearly details the changes you have made:</p>

<p>git commit –message “added logo in homepage and set width”
Add a remote repository to:</p>
<ul>
  <li>Have a backup of your work in the cloud ☁️;</li>
  <li>Centralize your team’s work 🎯.</li>
</ul>

<p>Go on GitHub and create a repository.</p>

<p>Connect it to your local git repo by running the following command in your terminal:</p>

<p>git remote add origin git@github.com:github_username/repo_name.git
Push your work on your remote repository:</p>

<p>git push <remote> <branch></branch></remote></p>

<h1 id="for-instance">for instance</h1>
<p>git push origin master
Working as a team implies coordination:</p>

<p>Communication is key 🔑.
Branches are also very helpful 🌿.
One branch = One feature</p>

<p>Before starting a new feature:</p>

<p>Make sure your local master branch is up-to-date with GitHub’s master:</p>

<p>git checkout master
git pull origin master
Create a new branch and move on it:</p>

<p>git branch update-logo
git checkout update-logo
When your work is done, it’s time to request a review by your peers:</p>

<p>Add, commit and push your last changes.
Go on GitHub and create a Pull Request.
This opens a conversation among your team
Your teammates will read the changes you made, comment, ask questions, request corrections and maybe new changes.
This will trigger new commits on your side, and when everyone is satisfied, the lead developer will merge the changes to the master branch (== the live version of your website).
Happy Hacking 🚀🚀🚀</p>
:ET